/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.springkafkaavro.order.event.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CreateOrderAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2493237429945552154L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CreateOrderAvro\",\"namespace\":\"com.example.springkafkaavro.order.event.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"itemId\",\"type\":\"long\"},{\"name\":\"quantity\",\"type\":\"long\"},{\"name\":\"totalPrice\",\"type\":\"long\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"OrderStatusAvro\",\"symbols\":[\"ORDERED\",\"REFUND\",\"DELIVERED\",\"CANCELED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CreateOrderAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CreateOrderAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CreateOrderAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CreateOrderAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CreateOrderAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CreateOrderAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CreateOrderAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CreateOrderAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CreateOrderAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long id;
  private long itemId;
  private long quantity;
  private long totalPrice;
  private com.example.springkafkaavro.order.event.avro.OrderStatusAvro status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CreateOrderAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param itemId The new value for itemId
   * @param quantity The new value for quantity
   * @param totalPrice The new value for totalPrice
   * @param status The new value for status
   */
  public CreateOrderAvro(java.lang.Long id, java.lang.Long itemId, java.lang.Long quantity, java.lang.Long totalPrice, com.example.springkafkaavro.order.event.avro.OrderStatusAvro status) {
    this.id = id;
    this.itemId = itemId;
    this.quantity = quantity;
    this.totalPrice = totalPrice;
    this.status = status;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return itemId;
    case 2: return quantity;
    case 3: return totalPrice;
    case 4: return status;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: itemId = (java.lang.Long)value$; break;
    case 2: quantity = (java.lang.Long)value$; break;
    case 3: totalPrice = (java.lang.Long)value$; break;
    case 4: status = (com.example.springkafkaavro.order.event.avro.OrderStatusAvro)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'itemId' field.
   * @return The value of the 'itemId' field.
   */
  public long getItemId() {
    return itemId;
  }


  /**
   * Sets the value of the 'itemId' field.
   * @param value the value to set.
   */
  public void setItemId(long value) {
    this.itemId = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public long getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(long value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'totalPrice' field.
   * @return The value of the 'totalPrice' field.
   */
  public long getTotalPrice() {
    return totalPrice;
  }


  /**
   * Sets the value of the 'totalPrice' field.
   * @param value the value to set.
   */
  public void setTotalPrice(long value) {
    this.totalPrice = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.example.springkafkaavro.order.event.avro.OrderStatusAvro getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.example.springkafkaavro.order.event.avro.OrderStatusAvro value) {
    this.status = value;
  }

  /**
   * Creates a new CreateOrderAvro RecordBuilder.
   * @return A new CreateOrderAvro RecordBuilder
   */
  public static com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder newBuilder() {
    return new com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder();
  }

  /**
   * Creates a new CreateOrderAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CreateOrderAvro RecordBuilder
   */
  public static com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder newBuilder(com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder other) {
    if (other == null) {
      return new com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder();
    } else {
      return new com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder(other);
    }
  }

  /**
   * Creates a new CreateOrderAvro RecordBuilder by copying an existing CreateOrderAvro instance.
   * @param other The existing instance to copy.
   * @return A new CreateOrderAvro RecordBuilder
   */
  public static com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder newBuilder(com.example.springkafkaavro.order.event.avro.CreateOrderAvro other) {
    if (other == null) {
      return new com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder();
    } else {
      return new com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for CreateOrderAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CreateOrderAvro>
    implements org.apache.avro.data.RecordBuilder<CreateOrderAvro> {

    private long id;
    private long itemId;
    private long quantity;
    private long totalPrice;
    private com.example.springkafkaavro.order.event.avro.OrderStatusAvro status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.itemId)) {
        this.itemId = data().deepCopy(fields()[1].schema(), other.itemId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.quantity)) {
        this.quantity = data().deepCopy(fields()[2].schema(), other.quantity);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[3].schema(), other.totalPrice);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing CreateOrderAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.springkafkaavro.order.event.avro.CreateOrderAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.itemId)) {
        this.itemId = data().deepCopy(fields()[1].schema(), other.itemId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quantity)) {
        this.quantity = data().deepCopy(fields()[2].schema(), other.quantity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[3].schema(), other.totalPrice);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemId' field.
      * @return The value.
      */
    public long getItemId() {
      return itemId;
    }


    /**
      * Sets the value of the 'itemId' field.
      * @param value The value of 'itemId'.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder setItemId(long value) {
      validate(fields()[1], value);
      this.itemId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'itemId' field has been set.
      * @return True if the 'itemId' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'itemId' field.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder clearItemId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public long getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder setQuantity(long value) {
      validate(fields()[2], value);
      this.quantity = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder clearQuantity() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrice' field.
      * @return The value.
      */
    public long getTotalPrice() {
      return totalPrice;
    }


    /**
      * Sets the value of the 'totalPrice' field.
      * @param value The value of 'totalPrice'.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder setTotalPrice(long value) {
      validate(fields()[3], value);
      this.totalPrice = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrice' field has been set.
      * @return True if the 'totalPrice' field has been set, false otherwise.
      */
    public boolean hasTotalPrice() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'totalPrice' field.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder clearTotalPrice() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.example.springkafkaavro.order.event.avro.OrderStatusAvro getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder setStatus(com.example.springkafkaavro.order.event.avro.OrderStatusAvro value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.example.springkafkaavro.order.event.avro.CreateOrderAvro.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CreateOrderAvro build() {
      try {
        CreateOrderAvro record = new CreateOrderAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.itemId = fieldSetFlags()[1] ? this.itemId : (java.lang.Long) defaultValue(fields()[1]);
        record.quantity = fieldSetFlags()[2] ? this.quantity : (java.lang.Long) defaultValue(fields()[2]);
        record.totalPrice = fieldSetFlags()[3] ? this.totalPrice : (java.lang.Long) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (com.example.springkafkaavro.order.event.avro.OrderStatusAvro) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CreateOrderAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<CreateOrderAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CreateOrderAvro>
    READER$ = (org.apache.avro.io.DatumReader<CreateOrderAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeLong(this.itemId);

    out.writeLong(this.quantity);

    out.writeLong(this.totalPrice);

    out.writeEnum(this.status.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.itemId = in.readLong();

      this.quantity = in.readLong();

      this.totalPrice = in.readLong();

      this.status = com.example.springkafkaavro.order.event.avro.OrderStatusAvro.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.itemId = in.readLong();
          break;

        case 2:
          this.quantity = in.readLong();
          break;

        case 3:
          this.totalPrice = in.readLong();
          break;

        case 4:
          this.status = com.example.springkafkaavro.order.event.avro.OrderStatusAvro.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










