import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    //avro
//    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
    id "com.github.davidmc24.gradle.plugin.avro-base" version "1.9.1"
}



group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // query log
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    // avro
    implementation "org.apache.avro:avro:1.12.0"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // H2 test
    testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// avro
avro{
    outputCharacterEncoding = "UTF-8"
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("src/main/java")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}